[Many to many relationship]:
---------------------------
BOTH CLASSES INSTANCIES IN THE MIDDLE TABLE
INSTANCE OF A MIDDLE TABLE IN EACH ANOTHER INSTANCE AS AN ICOLLECTION OF MIDDLE INSTANCE


[One to many relationship]:
--------------------------
ENTITY ICOLLECTION IN A KEY/DRIVE INSTANCE ONLY

[One to one relationship]:
--------------------------
BOTH ENTITIES

- Use Key and Foreign Key attributes for each instance.
- General coupling: inbuild another entity in each other. 



=====
PLAN MONGO:

0) Поищи кодовую базу из книги по монго или найди данные в виде json для тестирования своих запросов.
1) Использовать транзакции для создания апи на монго.
2) Широко использовать модификаторы в фильтрах.
3) Статьи реализовать, разобрать.
4) Брать метанит - смотреть с него реализации.
5) Как в проекте использовать filters в рамках approach of unit of work pattern...


=====
PLAN SD:

SELF-EFFORTS:
------------
I

1) Mongo
2) Identity server4
------------
II
3) Angular


III
4) React

WORK-EFFORTS:
-------------
I
1) AWS - цепляйся к высоко нагруженному на рабочем месте.

=====
METHODS OF MONGO COLLECTION...........:
---------------------------------------
//Aggregate()
//AggregateAsync()
//AggregateToCollection()
//AggregateToCollectionAsync()
//BulkWrite()
//BulkWriteAsync()
//CountDocuments()
//CountDocumentsAsync()
//DeleteMany()
//DeleteManyAsync()
//DeleteOne()
//DeleteOneAsync()
//Distinct()
//DistinctAsync()
//EstimatedDocumentCount()
//EstimatedDocumentCountAsync()
//FindAsync()
//FindOneAndDelete()
//FindOneAndDeleteAsync()
//FindOneAndReplace()
//FindOneAndReplaceAsync()
//FindOneAndUpdate()
//FindOneAndUpdateAsync()
//FindSync()
//InsertMany()
//InsertManyAsync()
//InsertOne()
//InsertOneAsync()
//MapReduce()
//MapReduceAsync()
//ReplaceOne()
//ReplaceOneAsync()
//UpdateMany()
//UpdateManyAsync()
//UpdateOne()
//UpdateOneAsync()
//Watch()
//WatchAsync()
//WithReadConcern()
//WithReadPreference()
//WithWriteConcern()

//OPERATORS...:
----------------------
All
And
AnyEq // any means for array...
AnyGt
AnyGte
AnyIn
AnyLt
AnyLte
AnyNe
AnyNin
BitsAllClear
BitsAllSet
BitsAnyClear
BitsAnySet
ElemMatch
Eq // for text search...
Exists
GeoIntersects
GeoWithin
GeoWithinBox
GeoWithinCenter
GeoWithinCenterSphere
GeoWithinPolygon
Gt
Gte
In //Builders<Person>.Filter.In("Age", new List<BsonInt32>() { 23, 25, 27 });
JsonSchemaBsonDocument schema
Lt
Lte
Mod
Ne - не равно
Near
NearSphere
Nin - not in
NotFilterDefinition
OfType
OfType<TDerived> where TDerived : TDocument
Or
Regex
Size
SizeGt
SizeGte
SizeLt
SizeLte
Text
Textstring search, string language
Type
Where


